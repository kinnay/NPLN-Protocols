
syntax = "proto3";

package nn.npln.ugcstore.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

import "proto/ugcstore/v1/query.proto";
import "proto/ugcstore/v1/resources.proto";
import "proto/ugcstore/v1/write.proto";

message GetDocumentRequest {
	string name = 1;
	google.protobuf.FieldMask read_mask = 2;
}

message BulkGetDocumentsRequest {
	// [UNKNOWN]
}

message BulkGetDocumentsResponse {
	oneof result {
		Document found = 1;
		string missing = 2;
	}
	google.protobuf.Timestamp read_time = 4;
}

message RunQueryRequest {
	string parent = 1;
	oneof query_type {
		StructuredQuery structured_query = 2;
	}
}

message RunQueryResponse {
	// [UNKNOWN]
}

message CommitDocumentsRequest {
	string tenant = 1;
	repeated WriteOperation write_operations = 2;
}

message CommitDocumentsResponse {
	repeated WriteResult write_results = 1;
	google.protobuf.Timestamp commit_time = 2;
}

message IssueAttachmentUriRequest {
	string parent = 1;
	oneof expiration {
		google.protobuf.Timestamp expire_time = 2;
		google.protobuf.Duration ttl = 3;
	}
}

message IssueAttachmentUriResponse {
	string uri = 1;
}

message IssueUploadUriRequest {
	string parent = 1;
}

message IssueUploadUriResponse {
	string uri = 1;
}

service Ugcstore {
	rpc GetDocument(GetDocumentRequest) returns (Document);
	rpc BulkGetDocuments(BulkGetDocumentsRequest) returns (stream BulkGetDocumentsResponse);
	rpc RunQuery(RunQueryRequest) returns (RunQueryResponse);
	rpc CommitDocuments(CommitDocumentsRequest) returns (CommitDocumentsResponse);
	rpc IssueAttachmentUri(IssueAttachmentUriRequest) returns (IssueAttachmentUriResponse);
	// [UNKNOWN] rpc BulkIssueAttachmentUri
	rpc IssueUploadUri(IssueUploadUriRequest) returns (IssueUploadUriResponse);
	// [UNKNOWN] rpc CreateDocumentShortAlias
	// [UNKNOWN] rpc GetDocumentShortAlias
}
